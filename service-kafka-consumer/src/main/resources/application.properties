spring.application.name=service-kafka-consumer

spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.default-property-inclusion=non_null

info.app.name=${spring.application.name}
info.app.description=Sample Kafka consumer that listens to a Kafka topic and logs the message.

management.endpoints.enabled-by-default=true

# The group-id determines how this application presents itself to the kafka custer.
# Using a new value not used before will start listening at a fresh offset.
spring.kafka.consumer.group-id=${spring.application.name}-102
# What message to start processing at.  Valid values are earliest | latest.  Only recognized when a new value is used for the group-id setting above.
spring.kafka.consumer.auto-offset-reset=earliest
# This should be set of false since the code handles this upon each message arrival.
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.isolation.level=read_committed
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#*****************************************************************************************************

# topic to listen to
application.kafkaConsumer.topicName=order

# whether to start the Kafka listener up or not (changing this requires a restart of the application)
application.kafkaConsumer.listenerEnabled=true

# Header names for the Kafka event context
application.kafkaConsumer.headerNames.publisher=X-CVET-Publisher
application.kafkaConsumer.headerNames.type=X-CVET-Type
application.kafkaConsumer.headerNames.event=X-CVET-Event
application.kafkaConsumer.headerNames.traceId=X-CVET-TraceId
application.kafkaConsumer.headerNames.version=X-CVET-Version


application.logging.logstash.enabled=false
application.logging.logstash.host=localhost
application.logging.logstash.port=5000
application.logging.logstash.queue-size=512



